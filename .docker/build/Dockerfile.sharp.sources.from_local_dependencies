FROM mcr.microsoft.com/dotnet/sdk:7.0 AS Build

# Install system dependencies.
RUN set -x \
    && apt-get update \
    && apt-get install -y \
        unzip \
        wget

# Download and unpack neo-node, neo-modules, neo-vm and neo source code.
# The main project structure is:
# /
# └── neo-project
#           ├── neo
#           ├── neo-node
#           │    ├── neo-cli
#           │    ├── neo-gui
#           │    └── Neo.ConsoleService
#           │
#           ├── neo-modules
#           └── neo-vm
# Use ENV variables to specify branch, version or revision to download.
ENV CLIBRANCH="v3.6.0"
ENV MODULESBRANCH="v3.6.1"
ENV MODULES="DBFTPlugin LevelDBStore RocksDBStore RpcServer"
ENV NEOVMBRANCH="v3.6.0"
ENV NEOBRANCH="v3.6.0"
RUN mkdir /neo-project && \
    wget -O /tmp/neo.zip https://github.com/neo-project/neo/archive/${NEOBRANCH}.zip && \
    unzip -q -d /neo-project/ /tmp/neo.zip && \
    mv /neo-project/neo-* /neo-project/neo && \
    wget -O /tmp/neo-cli.zip https://github.com/neo-project/neo-node/archive/${CLIBRANCH}.zip && \
    unzip -q -d /neo-project/ /tmp/neo-cli.zip && \
    mv /neo-project/neo-node-* /neo-project/neo-node && \
    wget -O /tmp/neo-modules.zip https://github.com/neo-project/neo-modules/archive/${MODULESBRANCH}.zip && \
    unzip -q -d /neo-project/ /tmp/neo-modules.zip && \
    mv /neo-project/neo-modules-* /neo-project/neo-modules && \
    wget -O /tmp/neo-vm.zip https://github.com/neo-project/neo-vm/archive/${NEOVMBRANCH}.zip && \
    unzip -q -d /neo-project/ /tmp/neo-vm.zip && \
    mv /neo-project/neo-vm-* /neo-project/neo-vm

# Update project references in order to include local projects instead of MyGet NuGet packages.
RUN sed -i '/PackageReference Include="Neo" Version=/c \    <ProjectReference Include="..\\..\\neo\\src\\Neo\\Neo.csproj" \/>' /neo-project/neo-node/neo-cli/neo-cli.csproj && \
    sed -i '/<PackageReference Include="Neo.VM" Version=/c \    <ProjectReference Include="..\\..\\..\\neo-vm\\src\\Neo.VM\\Neo.VM.csproj" \/>' /neo-project/neo/src/Neo/Neo.csproj && \
    sed -i '/<PackageReference Include="Neo" Version=/c \    <ProjectReference Include="..\\..\\..\\neo\\src\\Neo\\Neo.csproj" \/>' /neo-project/neo-modules/src/Directory.Build.props

# Publish neo-cli from source as a self-contained deployment into /neo-cli folder (all dependant .dlls are included).
# See https://docs.microsoft.com/ru-ru/dotnet/core/deploying/#publish-self-contained for details.
RUN dotnet publish -c Release --framework net7.0 /neo-project/neo-node/neo-cli -o /neo-cli

# Build neo-modules from source into /Plugins folder (only plugin .dll and plugin config are included, if you need other dependant .dlls, see the next step)
RUN mkdir /Plugins && \
    for mod in ${MODULES}; do \
        dotnet restore /neo-project/neo-modules/src/${mod}/; \
        dotnet build -c Release /neo-project/neo-modules/src/${mod}/; \
	mkdir /Plugins/${mod}; \
        cp -r /neo-project/neo-modules/src/${mod}/bin/Release/net7.0/* /Plugins/${mod}; \
    done

# All things are published, so build the final image by copying binaries from Build
FROM mcr.microsoft.com/dotnet/aspnet:7.0 as Final

# Frontend non-interactive
ENV DEBIAN_FRONTEND noninteractive

# Disable dotnet usage information collection
# https://docs.microsoft.com/en-us/dotnet/core/tools/telemetry#behavior
ENV DOTNET_CLI_TELEMETRY_OPTOUT 1

# Install system dependencies. always should be done in one line
# https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/#run
RUN set -x \
    && apt-get update \
    && apt-get install -y \
        libleveldb-dev \
        curl \
        jq \
        libssl-dev \
        libunwind8 \
        librocksdb-dev \
        libc6-dev \
        iproute2 \
    # APT cleanup to reduce image size
    && rm -rf /var/lib/apt/lists/*

# Copy neo-cli and all dependant .dlls from Build
COPY --from=Build /neo-cli /neo-cli/

# Copy Plugins without dependant .dlls from Build
COPY --from=Build /Plugins /neo-cli/Plugins/

# A welcome message for bash users
RUN echo "printf \"\n* Please report issues to https://github.com/CityOfZion/neo-local\n\n\"" >> /root/.bashrc

WORKDIR /neo-cli

RUN chmod +x /neo-cli/neo-cli

COPY ./sharp.entrypoint.sh /entrypoint.sh
COPY ./sharp.healthcheck.sh /healthcheck.sh
COPY ./sharp.rpc.config.json /neo-cli/Plugins/RpcServer/config.json
COPY ./sharp.dbft.config.json /neo-cli/Plugins/DBFTPlugin/config.json
#COPY ./sharp.statesdumper.config.json /neo-cli/Plugins/StatesDumper/config.json
#COPY ./sharp.applicationlogs.config.json /neo-cli/Plugins/ApplicationLogs/config.json

ENTRYPOINT [ "/entrypoint.sh" ]
